--- make/libs/libgsm/libgsm.mk	2022-09-24 19:44:27.163339000 +0200
+++ make/libs/libgsm/libgsm.mk	2022-09-29 19:04:16.673860330 +0200
@@ -1,11 +1,12 @@
-$(call PKG_INIT_LIB, 1.0.13)
+$(call PKG_INIT_LIB, 1.0.19)
+$(PKG)_LIB_VERSION:=1.0.13
 $(PKG)_SOURCE:=$(pkg)_$($(PKG)_VERSION).orig.tar.gz
-$(PKG)_HASH:=52c518244d428c2e56c543b98c9135f4a76ff780c32455580b793f60a0a092ad
+$(PKG)_HASH:=4903652f68a8c04d0041f0d19b1eb713ddcd2aa011c5e595b3b8bca2755270f6
 $(PKG)_SITE:=http://ftp.de.debian.org/debian/pool/main/libg/libgsm
 
-$(PKG)_BINARY:=$($(PKG)_DIR)/lib/$(pkg).so.$($(PKG)_VERSION)
-$(PKG)_STAGING_BINARY:=$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/$(pkg).so.$($(PKG)_VERSION)
-$(PKG)_TARGET_BINARY:=$($(PKG)_TARGET_DIR)/$(pkg).so.$($(PKG)_VERSION)
+$(PKG)_BINARY:=$($(PKG)_DIR)/lib/$(pkg).so.$($(PKG)_LIB_VERSION)
+$(PKG)_STAGING_BINARY:=$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/$(pkg).so.$($(PKG)_LIB_VERSION)
+$(PKG)_TARGET_BINARY:=$($(PKG)_TARGET_DIR)/$(pkg).so.$($(PKG)_LIB_VERSION)
 
 $(PKG_SOURCE_DOWNLOAD)
 $(PKG_UNPACKED)
--- make/libs/libgsm/patches/030-missing_includes.libgsm.patch	2022-09-24 19:44:27.163339000 +0200
+++ make/libs/libgsm/patches/030-missing_includes.libgsm.patch	2022-09-29 18:39:44.683923048 +0200
@@ -1,6 +1,6 @@
 --- inc/toast.h
 +++ inc/toast.h
-@@ -37,6 +38,10 @@
+@@ -41,6 +41,10 @@
  # endif
  #endif
  
@@ -11,16 +11,3 @@
  #include "gsm.h"
  
  #ifndef	S_ISREG
---- src/code.c
-+++ src/code.c
-@@ -9,8 +9,8 @@
- #include	"config.h"
- 
- 
--#ifdef	HAS_STDLIB_H
--#include	<stdlib.h>
-+#ifdef	HAS_STRING_H
-+#include	<string.h>
- #else
- #	include "proto.h"
- 	extern char	* memcpy P((char *, char *, int));
--- make/libs/libgsm/patches/102-cplusplus.debian.libgsm.patch	2022-09-24 19:44:27.163339000 +0200
+++ make/libs/libgsm/patches/102-cplusplus.debian.libgsm.patch	2022-09-29 18:39:44.699922700 +0200
@@ -1,6 +1,6 @@
 --- inc/gsm.h
 +++ inc/gsm.h
-@@ -54,6 +54,10 @@
+@@ -58,6 +58,10 @@
  #define	GSM_OPT_FRAME_INDEX	5
  #define	GSM_OPT_FRAME_CHAIN	6
  
@@ -11,7 +11,7 @@
  extern gsm  gsm_create 	GSM_P((void));
  extern void gsm_destroy GSM_P((gsm));	
  
-@@ -66,6 +70,10 @@
+@@ -70,6 +74,10 @@
  extern int  gsm_explode GSM_P((gsm, gsm_byte   *, gsm_signal *));
  extern void gsm_implode GSM_P((gsm, gsm_signal *, gsm_byte   *));
  
@@ -21,4 +21,4 @@
 +
  #undef	GSM_P
  
- #endif	/* GSM_H */
+ #ifdef __cplusplus
--- make/libs/libgsm/patches/105-compiler_warnings.debian.libgsm.patch	2022-09-24 19:44:27.163339000 +0200
+++ make/libs/libgsm/patches/105-compiler_warnings.debian.libgsm.patch	2022-09-29 18:58:09.493182810 +0200
@@ -1,53 +1,25 @@
 --- src/debug.c
 +++ src/debug.c
-@@ -49,7 +49,7 @@
+@@ -28,7 +28,7 @@
+ 
  	fprintf( stderr, "%s [%d .. %d]: ", name, from, to );
  	while (from <= to) {
- 
 -		fprintf(stderr, "%d ", ptr[ from ] );
 +		fprintf(stderr, "%ld ", ptr[ from ] );
  		from++;
  		if (nprinted++ >= 7) {
  			nprinted = 0;
-@@ -63,14 +63,14 @@
- 	char		* name,
- 	longword	  value	)
- {
--	fprintf(stderr, "%s: %d\n", name, (long)value );
-+	fprintf(stderr, "%s: %ld\n", name, (long)value );
- }
- 
- void gsm_debug_word P2(  (name, value),
- 	char	* name,
- 	word	  value	)
- {
--	fprintf(stderr, "%s: %d\n", name, (long)value);
-+	fprintf(stderr, "%s: %ld\n", name, (long)value);
- }
- 
- #endif
 --- src/toast.c
 +++ src/toast.c
-@@ -251,8 +251,8 @@
+@@ -251,7 +251,7 @@
  {
  	char * s;
  	if (!(s = malloc(len))) {
 -		fprintf(stderr, "%s: failed to malloc %d bytes -- abort\n",
--			progname, len);
 +		fprintf(stderr, "%s: failed to malloc %ld bytes -- abort\n",
-+			progname, (long) len);
+ 			progname, (int)len);
  		onintr();
  		exit(1);
- 	}
-@@ -270,7 +270,7 @@
- 	maxlen = strlen(name) + 1 + strlen(want) + strlen(cut);
- 	p = strcpy(emalloc(maxlen), name);
- 
--	if (s = suffix(p, cut)) strcpy(s, want);
-+	if ((s = suffix(p, cut))) strcpy(s, want);
- 	else if (*want && !suffix(p, want)) strcat(p, want);
- 
- 	return p;
 @@ -386,7 +386,7 @@
  		ut[0] = instat.st_atime;
  		ut[1] = instat.st_mtime;
@@ -57,40 +29,14 @@
  
  #endif	/* UTIMBUF */
  	}
-@@ -416,7 +416,7 @@
- 	}
- 	if (st->st_nlink > 1 && !f_cat && !f_precious) {
- 		fprintf(stderr, 
--		      "%s: \"%s\" has %s other link%s -- unchanged.\n",
-+		      "%s: \"%s\" has %d other link%s -- unchanged.\n",
- 			progname,name,st->st_nlink - 1,"s" + (st->st_nlink<=2));
- 		return 0;
- 	}
-@@ -585,8 +585,8 @@
+@@ -586,8 +586,8 @@
  
  		if (cc != sizeof(s)) {
  			if (cc >= 0) fprintf(stderr,
 -			"%s: incomplete frame (%d byte%s missing) from %s\n",
--					progname, sizeof(s) - cc,
+-					progname, (int)(sizeof(s) - cc),
 +			"%s: incomplete frame (%ld byte%s missing) from %s\n",
 +					progname, (long) sizeof(s) - cc,
  					"s" + (sizeof(s) - cc == 1),
  					inname ? inname : "stdin" );
  			gsm_destroy(r);
-@@ -624,8 +624,6 @@
- 
- static int process P1((name), char * name)
- {
--	int step = 0;
--
- 	out     = (FILE *)0;
- 	in      = (FILE *)0;
- 
-@@ -779,7 +777,6 @@
- 	case 'h': help();    exit(0);
- 
- 	default: 
--	usage:
- 		fprintf(stderr,
- 	"Usage: %s [-fcpdhvuaslFC] [files...] (-h for help)\n",
- 			progname);
