#!/bin/bash
if [[ $(lsb_release -rs) == "20.04" ]] || [[ $(lsb_release -rs) == "21.10" ]] || [[ $(lsb_release -rs) == "22.04" ]] || [[ $(lsb_release -rs) == "11" ]]; then # replace 20.04 by the number of release you want

PACKAGES="  cpio pv rsync kmod execstack sqlite3 libsqlite3-dev flex tofrodos gettext pkg-config ecj fastjar perl ruby gawk python2 python-is-python3 net-tools ncftp libxml2-dev"
PACKAGES+=" bzip2 unar inkscape imagemagick graphicsmagick subversion git bc wget curl sudo cmake ccache unzip intltool patchutils gcc-multilib"
PACKAGES+=" gcc g++ gcc-multilib binutils autoconf automake autopoint libtool-bin make bison patch texinfo lib32ncurses-dev libcap-dev bsdmainutils"
PACKAGES+=" libzstd-dev libc6-dev netcat lib32z1-dev libncurses5-dev libreadline-dev zlib1g-dev libacl1-dev lib32stdc++6 libglib2.0-dev libstring-crc32-perl libusb-dev"
PACKAGES+=" uuid-dev libssl-dev libgnutls28-dev u-boot-tools device-tree-compiler liblzma-dev" # for FIT-Image
#PACKAGES+=" libzstd-dev:i386 libc6-dev-i386"
	
if ! dpkg -s $PACKAGES >/dev/null 2>&1; then
	printf "${YELLOW}Installing prerequisite packages...\n${NC}"
#	sudo dpkg --add-architecture i386
	sudo apt-get install $PACKAGES
#	sudo apt-get update && sudo apt-get -y upgrade && sudo apt dist-upgrade && sudo apt autoclean && sudo apt autoremove
	cd /tmp
	wget http://mirrors.kernel.org/ubuntu/pool/universe/u/upx-ucl/upx-ucl_3.95-2build1_amd64.deb
	sudo apt install /tmp/upx-ucl_3.95-2build1_amd64.deb
	echo upx-ucl hold | sudo dpkg --set-selections
fi
else
       echo "Non-compatible version"
       echo "read here https://freetz-ng.github.io/freetz-ng/PREREQUISITES"
       exit
fi
